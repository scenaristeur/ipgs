{"version":3,"sources":["webpack:///./src/components/network/NetworkPopups.vue?4086","webpack:///src/components/network/NetworkPopups.vue","webpack:///./src/components/network/NetworkPopups.vue?ecb5","webpack:///./src/components/network/NetworkPopups.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","node","on","saveNode","edge","saveEdge","staticRenderFns","name","props","components","data","n","created","network","computed","action","get","set","methods","index","nodes","findIndex","push","Object","assign","console","log","e","edges","watch","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,YAAY,CAACE,MAAM,CAAC,KAAON,EAAIO,MAAMC,GAAG,CAAC,GAAKR,EAAIS,YAAYL,EAAG,YAAY,CAACE,MAAM,CAAC,KAAON,EAAIU,MAAMF,GAAG,CAAC,GAAKR,EAAIW,YAAYP,EAAG,eAAeA,EAAG,eAAeA,EAAG,oBAAoB,IACnSQ,EAAkB,GCUtB,G,kDAAA,CACEC,KAAM,gBACNC,MAAO,CAAC,WACRC,WAAY,CACV,UAAa,WAAjB,wDACI,UAAa,WAAjB,wDACI,YAAe,WAAnB,wDACI,YAAe,WAAnB,6FACI,gBAAmB,WAAvB,yDAEEC,KAVF,WAWI,MAAO,CACLT,KAAM,CAAZ,iFACMG,KAAM,GACNO,EAAG,OAGPC,QAjBF,WAkBIjB,KAAKgB,EAAIhB,KAAKkB,SAEhBC,SAAU,CACRC,OAAQ,CACNC,IADN,WACA,sCACMC,IAFN,eAKEC,QAAS,CACPf,SADJ,SACA,GACM,IAAIgB,EAAQxB,KAAKkB,QAAQO,MAAMC,WAAU,SAA/C,yBACiB,IAAXF,EAAexB,KAAKgB,EAAES,MAAME,KAAKX,GAAKY,OAAOC,OAAO7B,KAAKkB,QAAQO,MAAMD,GAAQR,IAEjFN,SALJ,SAKA,GACMoB,QAAQC,IAAIC,GACZ,IAAIR,EAAQxB,KAAKkB,QAAQe,MAAMP,WAAU,SAA/C,uEACiB,IAAXF,EAAexB,KAAKkB,QAAQe,MAAMN,KAAKK,GAAKJ,OAAOC,OAAO7B,KAAKkB,QAAQe,MAAMT,GAAQQ,KAGzFE,MAAF,CACId,OADJ,WACA,WACM,OAAQpB,KAAKoB,OAAOA,QAClB,IAAK,WACb,kGACA,qCACA,iCACA,MACQ,IAAK,WACb,kGACA,qCACA,iCACA,MACQ,IAAK,SACb,mDACA,mCACA,MACQ,IAAK,SACb,wHACA,mCACA,MACQ,cCrE8V,I,YCOlWe,EAAY,eACd,EACArC,EACAa,GACA,EACA,KACA,KACA,MAIa,aAAAwB,E","file":"js/chunk-2d215ca0.ded14398.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('NodeModal',{attrs:{\"node\":_vm.node},on:{\"ok\":_vm.saveNode}}),_c('EdgeModal',{attrs:{\"edge\":_vm.edge},on:{\"ok\":_vm.saveEdge}}),_c('ImportModal'),_c('ExportModal'),_c('PropertiesPopup')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <NodeModal :node=\"node\" @ok=\"saveNode\"/>\n    <EdgeModal :edge=\"edge\" @ok=\"saveEdge\"/>\n    <ImportModal />\n    <ExportModal />\n    <PropertiesPopup />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"NetworkPopups\",\n  props: ['network'],\n  components: {\n    'NodeModal': () => import('@/components/network/NodeModal'),\n    'EdgeModal': () => import('@/components/network/EdgeModal'),\n    'ImportModal': () => import('@/components/network/ImportModal'),\n    'ExportModal': () => import('@/components/network/ExportModal'),\n    'PropertiesPopup': () => import('@/components/network/PropertiesPopup'),\n  },\n  data() {\n    return {\n      node: {label: \"\", color: {  background: '#D2E5FF', border: '#2B7CE9'}, shape: 'ellipse', props: []},\n      edge: {},\n      n: null\n    }\n  },\n  created(){\n    this.n = this.network\n  },\n  computed: {\n    action: {\n      get () { return this.$store.state.ipgs.action},\n      set (/*value*/) { /*this.updateTodo(value)*/ }\n    },\n  },\n  methods: {\n    saveNode(n) {\n      var index = this.network.nodes.findIndex(x => x.id==n.id);\n      index === -1 ? this.n.nodes.push(n) : Object.assign(this.network.nodes[index], n)\n    },\n    saveEdge(e){\n      console.log(e)\n      var index = this.network.edges.findIndex(x => x.id==e.id || (x.from == e.from && x.to == e.to && x.label == e.label));\n      index === -1 ? this.network.edges.push(e) : Object.assign(this.network.edges[index], e)\n    },\n  },\n  watch:{\n    action(){\n      switch (this.action.action) {\n        case 'editNode':\n        this.node = this.network.nodes.find(x => x.id==this.action.node.id) || this.action.node\n        console.log(\"props\",this.node.props)\n        this.$bvModal.show(\"node-popup\")\n        break;\n        case 'editEdge':\n        this.edge = this.network.edges.find(x => x.id==this.action.edge.id) || this.action.edge\n        console.log(\"props\",this.edge.props)\n        this.$bvModal.show(\"edge-popup\")\n        break;\n        case 'import':\n        this.$store.commit('ipgs/setNetwork', this.network)\n        this.$bvModal.show(\"import-popup\")\n        break;\n        case 'export':\n        this.$store.commit('ipgs/setEditorContent', {content: {nodes: this.network.nodes, edges: this.network.edges}, format: 'json'})\n        this.$bvModal.show(\"export-popup\")\n        break;\n        default:\n      }\n    },\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NetworkPopups.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NetworkPopups.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NetworkPopups.vue?vue&type=template&id=2358c1ba&\"\nimport script from \"./NetworkPopups.vue?vue&type=script&lang=js&\"\nexport * from \"./NetworkPopups.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}