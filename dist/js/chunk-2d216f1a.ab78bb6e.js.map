{"version":3,"sources":["webpack:///./src/components/layout/CommandInput.vue?937c","webpack:///src/components/layout/CommandInput.vue","webpack:///./src/components/layout/CommandInput.vue?5fda","webpack:///./src/components/layout/CommandInput.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","scopedSlots","_u","key","fn","proxy","attrs","on","$event","type","indexOf","_k","keyCode","onEnter","model","value","callback","$$v","main_input","expression","staticRenderFns","name","components","data","commandHistory","methods","console","log","inputValue","length","inputObject","getInputType","$store","commit","inputNew","isValidUrl","iv","isFile","traiteTriplet","result","messageCut","forEach","part","trim","startsWith","detectLiteral","messageCutTemp","push","substr","pop","isTriplet","tripletvalue","subject","predicate","object","message","catchTriplet","triplet","updateInput","document","getElementById","pathname","split","URL","string","watch","commandInput","computed","get","set","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,gBAAgB,CAACE,YAAYN,EAAIO,GAAG,CAAC,CAACC,IAAI,SAASC,GAAG,WAAW,MAAO,CAACL,EAAG,oBAAoBM,OAAM,MAAS,CAACN,EAAG,eAAe,CAACO,MAAM,CAAC,GAAK,QAAQ,UAAY,GAAG,MAAQ,uCAAuC,YAAc,uBAAuBC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAIA,EAAOC,KAAKC,QAAQ,QAAQf,EAAIgB,GAAGH,EAAOI,QAAQ,QAAQ,GAAGJ,EAAOL,IAAI,SAAkB,KAAcR,EAAIkB,QAAQL,KAAUM,MAAM,CAACC,MAAOpB,EAAc,WAAEqB,SAAS,SAAUC,GAAMtB,EAAIuB,WAAWD,GAAKE,WAAW,iBAAiB,IAC/lBC,EAAkB,GCmBtB,G,8GAAA,CACEC,KAAM,eACNC,WAAY,CACV,eAAkB,WAAtB,yDAEEC,KALF,WAMI,MAAO,CACLL,WAAY,GACZM,eAAgB,KAGpBC,QAAS,CACPZ,QADJ,WAEMa,QAAQC,IAAI/B,KAAKsB,YACjB,IAAN,yBACM,GAAIU,EAAWC,OAAS,EAA9B,CACQ,IAAIC,EAAclC,KAAKmC,aAAaH,GACpCF,QAAQC,IAAI,cAApB,GAIQ/B,KAAKoC,OAAOC,OAAO,sBAAuBH,GAC1ClC,KAAKsB,WAAaY,EAAYI,WAGlCH,aAdJ,SAcA,GACM,IAAID,EAAc,GAGlB,GAAIlC,KAAKuC,WAAWC,GAClBN,EAAYrB,KAAO,MACnBqB,EAAYf,MAAQqB,EACpBN,EAAYO,OAASzC,KAAKyC,OAAOD,OACzC,CAEQ,IAAR,cACA,KACQ,OAAR,GACU,IAAK,IAIf,kBACA,UACA,cAEA,MAEU,IAAK,IACf,oDACA,+BACA,MAEU,IAAK,IACf,oDACA,2BACA,MAEU,IAAK,IACf,oDACA,mBACA,MAGU,QAEV,wBACA,sBAMM,OAAON,GAETQ,cAhEJ,SAgEA,GACM,IAAIC,EAAS,GACTL,EAAW,GACrB,cACA,2BACA,KAGA,KACA,KAsBM,OArBAM,EAAWC,SAAQ,SAAzB,GACQC,EAAOA,EAAKC,OAERD,EAAKE,WAAW,MAClBC,EAAV,QAEUC,EAAeC,KAAKL,EAAKM,OAAO,KAC1C,iBACUH,EAAgB,MAEhBC,EAAeC,KAAKD,EAAeG,MAA7C,oBACA,WAEUH,EAAeC,KAAKD,EAAeG,MAA7C,OAEUH,EAAeC,KAAKL,MAGpBI,EAAejB,OAAS,IAC1BW,EAAaM,GAErB,GACQ,IAAK,IACb,KACA,MACQ,IAAK,IAEb,EADA,qBACA,cAEA,SAEA,MACQ,IAAK,IAEb,EADA,qBACA,cAEA,SAEA,qBACA,iBAEA,YAEA,MACQ,IAAK,IAEb,EADA,qBACA,cAEA,SAEA,MACQ,QACR,kCAIA,KACA,KAEM,GAAII,EAAV,CAEQX,EAAO9B,KAAO,UACd,IAAI0C,EAAe,GACnBA,EAAaC,QAAUZ,EAAW,GAClCW,EAAaE,UAAYb,EAAW,GACpCW,EAAaG,OAASd,EAAW,GACjCD,EAAOxB,MAAQoC,EACfZ,EAAOL,SAAWA,OAGlBK,EAAO9B,KAAO,UACd8B,EAAOxB,MAAQwC,EACfhB,EAAOL,SAAWA,EAGpB,OAAOK,GAETiB,aAvJJ,SAuJA,GACM9B,QAAQC,IAAI8B,IAyEdC,YAjOJ,SAiOA,GACMC,SAASC,eAAe,SAAS7C,MAAQmB,GAAY,IAEvDG,OApOJ,SAoOA,GACM,OAAOwB,EAASC,MAAM,KAAKb,MAAMvC,QAAQ,MAAQ,GAEnDyB,WAvOJ,SAuOA,GACM,IAEE,OADA,IAAI4B,IAAIC,IACD,EACf,SACQ,OAAO,KAIbC,MAAF,CACIC,aADJ,WAEMxC,QAAQC,IAAI/B,KAAKsE,cACjBtE,KAAKsB,WAAatB,KAAKsE,eAM3BC,SAAU,CACRD,aAAc,CACZE,IADN,WACA,4CACMC,IAFN,iBCzRqW,I,YCOjWC,EAAY,eACd,EACA5E,EACA0B,GACA,EACA,KACA,KACA,MAIa,aAAAkD,E","file":"js/chunk-2d216f1a.ab78bb6e.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-input-group',{scopedSlots:_vm._u([{key:\"append\",fn:function(){return [_c('NetworkToolBar')]},proxy:true}])},[_c('b-form-input',{attrs:{\"id\":\"input\",\"autofocus\":\"\",\"title\":\"type three words followed by a comma\",\"placeholder\":\"/h + Enter for help\"},on:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.onEnter($event)}},model:{value:(_vm.main_input),callback:function ($$v) {_vm.main_input=$$v},expression:\"main_input\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <b-input-group>\r\n      <b-form-input\r\n      id=\"input\"\r\n      autofocus\r\n      v-model=\"main_input\"\r\n      v-on:keyup.enter=\"onEnter\"\r\n      title=\"type three words followed by a comma\"\r\n      placeholder=\"/h + Enter for help\"></b-form-input>\r\n\r\n\r\n    <template #append>\r\n        <NetworkToolBar />\r\n    </template>\r\n  </b-input-group>\r\n\r\n  </template>\r\n\r\n<script>\r\n//https://github.com/scenaristeur/spoggy-simple/blob/cc3738baecea9ee6b3f87f81a70f69e0090cf658/js/spoggy.js#L38\r\nexport default {\r\n  name: 'CommandInput',\r\n  components: {\r\n    'NetworkToolBar': () => import('@/components/network/NetworkToolBar'),\r\n  },\r\n  data() {\r\n    return {\r\n      main_input: \"\",\r\n      commandHistory: []\r\n    }\r\n  },\r\n  methods: {\r\n    onEnter(){\r\n      console.log(this.main_input)\r\n      let inputValue = this.main_input.trim()\r\n      if (inputValue.length > 0){\r\n        var inputObject = this.getInputType(inputValue)\r\n        console.log(\"inputObject\",inputObject);\r\n        //  this.traiteInput(inputObject);\r\n        //  this.updateInput(inputObject.inputNew);\r\n        // this.$emit('onCommand', inputObject)\r\n        this.$store.commit('ipgs/setInputObject', inputObject)\r\n        this.main_input = inputObject.inputNew\r\n      }\r\n    },\r\n    getInputType(iv){\r\n      var inputObject = {};\r\n\r\n      // si commence par http --> type = url\r\n      if (this.isValidUrl(iv)){\r\n        inputObject.type = \"url\";\r\n        inputObject.value = iv;\r\n        inputObject.isFile = this.isFile(iv)\r\n      }else{\r\n        // selon le premier charactère, on detecte une commande\r\n        let firstChar = iv.charAt(0);\r\n        let last =\"\"\r\n        switch(firstChar){\r\n          case '/':\r\n          //    let commande = rdf.quad(rdf.blankNode(), rdf.namedNode('commande'),rdf.literal(message))\r\n          //  this.catchCommande(message,this.network,this);\r\n\r\n          inputObject.type = \"commande\";\r\n          inputObject.value = iv;\r\n          inputObject.inputNew = \"\";\r\n          //this.catchCommande(inputObject)\r\n          break;\r\n\r\n          case '.':\r\n          last = this.commandHistory[this.commandHistory.length-1];\r\n          inputObject.inputNew = last.s+\" \"+last.p+\" \"+last.o;\r\n          break;\r\n\r\n          case ';':\r\n          last = this.commandHistory[this.commandHistory.length-1];\r\n          inputObject.inputNew = last.s+\" \"+last.p+\" \";\r\n          break;\r\n\r\n          case ',':\r\n          last = this.commandHistory[this.commandHistory.length-1];\r\n          inputObject.inputNew = last.s+\" \";\r\n          break;\r\n\r\n\r\n          default:\r\n          // si le premier charactère n'indique pas une commande, on traite comme un triplet\r\n          inputObject = this.traiteTriplet(iv);\r\n          this.catchTriplet(inputObject)\r\n        }\r\n      }\r\n\r\n      //si termine par virgule, point, point-virgule, tiret --> triplet\r\n\r\n      return inputObject;\r\n    },\r\n    traiteTriplet(message){\r\n      var result = {}\r\n      var inputNew = \"\";\r\n      let lastChar = message.slice(-1);\r\n      let messageCut = message.slice(0,-1).split(\" \");\r\n      let isTriplet = true;\r\n      //  console.log(messageCut);\r\n\r\n      let detectLiteral = \"\";\r\n      let messageCutTemp = [];\r\n      messageCut.forEach(function(part){\r\n        part = part.trim();\r\n        //  console.log(part);\r\n        if (part.startsWith('\"')){\r\n          detectLiteral =\"debut\";\r\n          //  console.log(detectLiteral);\r\n          messageCutTemp.push(part.substr(1));\r\n        }else if (part.endsWith('\"')){\r\n          detectLiteral = \"fin\";\r\n          //console.log(detectLiteral);\r\n          messageCutTemp.push(messageCutTemp.pop()+\" \"+part.slice(0,-1));\r\n        }else if (detectLiteral == \"debut\"){\r\n          //  console.log(\"recupere le dernier et lui ajoute part\" )\r\n          messageCutTemp.push(messageCutTemp.pop()+\" \"+part)\r\n        }else {\r\n          messageCutTemp.push(part);\r\n        }\r\n      });\r\n      if (messageCutTemp.length > 0){\r\n        messageCut = messageCutTemp;\r\n      }\r\n      switch(lastChar){\r\n        case '.':\r\n        inputNew = \"\";\r\n        break;\r\n        case ';':\r\n        if (messageCut[0].indexOf(\" \") > -1){\r\n          inputNew = '\"'+messageCut[0]+'\"'+' ';\r\n        }else{\r\n          inputNew = messageCut[0]+' ';\r\n        }\r\n        break;\r\n        case ',':\r\n        if (messageCut[0].indexOf(\" \") > -1){\r\n          inputNew = '\"'+messageCut[0]+'\" ';\r\n        }else{\r\n          inputNew = messageCut[0]+' ';\r\n        }\r\n        if (messageCut[1].indexOf(\" \") > -1){\r\n          inputNew += '\"'+messageCut[1]+'\" ';\r\n        }else{\r\n          inputNew += messageCut[1]+' ';\r\n        }\r\n        break;\r\n        case '-':\r\n        if (messageCut[2].indexOf(\" \") > -1){\r\n          inputNew = '\"'+messageCut[2]+'\"'+' ';\r\n        }else{\r\n          inputNew = messageCut[2]+' ';\r\n        }\r\n        break;\r\n        default:\r\n        console.log(\"message to chat \"+message)\r\n        //this.sendMessage(message);\r\n        //  this.agentInput.send('agentSocket', {type: \"sendMessage\", message:message});\r\n        //  this.catchTriplet(message.slice(0,-1), this.network); // A REMPLACER PAR CATCHTRIPLETS V2\r\n        inputNew = \"\";\r\n        isTriplet = false;\r\n      }\r\n      if (isTriplet){\r\n        //  console.log(\"est Triplet\",messageCut)\r\n        result.type = \"triplet\";\r\n        var tripletvalue = {};\r\n        tripletvalue.subject = messageCut[0];\r\n        tripletvalue.predicate = messageCut[1];\r\n        tripletvalue.object = messageCut[2];\r\n        result.value = tripletvalue;\r\n        result.inputNew = inputNew;\r\n      }else {\r\n        //  console.log(\"n'est pas triplet\")\r\n        result.type = \"message\";\r\n        result.value = message;\r\n        result.inputNew = inputNew;\r\n      }\r\n\r\n      return result;\r\n    },\r\n    catchTriplet(triplet){\r\n      console.log(triplet)\r\n      // var subject = triplet.value.subject;\r\n      // var predicate = triplet.value.predicate;\r\n      // var object = triplet.value.object;\r\n\r\n      // console.log(message.length);\r\n      //message=message.trim();\r\n      //var tripletString = message.substring(2).trim().split(\" \");\r\n      // les noeuds existent-ils ?\r\n      // var sujetNode = this.network.body.data.nodes.get({\r\n      //   filter: function(node){\r\n      //     //    console.log(node);\r\n      //     return (node.label == subject );\r\n      //   }\r\n      // });\r\n      // var objetNode = this.network.body.data.nodes.get({\r\n      //   filter: function(node){\r\n      //     //    console.log(node);\r\n      //     return (node.label == object);\r\n      //   }\r\n      // });\r\n      //  console.log(sujetNode);\r\n      //  console.log(objetNode);\r\n      // sinon, on les créé\r\n      // if (sujetNode.length == 0){\r\n      //   var sub_n = {label: subject, color:{\r\n      //     border : document.getElementById(\"bordercolorpicker\").value ,\r\n      //     background : document.getElementById(\"bodycolorpicker\").value }\r\n      //   };\r\n      //   this.network.body.data.nodes.add(sub_n);\r\n      // }\r\n      // if (objetNode.length == 0){\r\n      //   var obj_n = {label: object, color:{\r\n      //     border : document.getElementById(\"bordercolorpicker\").value ,\r\n      //     background : document.getElementById(\"bodycolorpicker\").value }\r\n      //   };\r\n      //   this.network.body.data.nodes.add(obj_n);\r\n      // }\r\n      // // maintenant ils doivent exister, pas très po=ropre comme méthode , à revoir\r\n      // sujetNode = this.network.body.data.nodes.get({\r\n      //   filter: function(node){\r\n      //     return (node.label == subject );\r\n      //   }\r\n      // });\r\n      // objetNode = this.network.body.data.nodes.get({\r\n      //   filter: function(node){\r\n      //     //  console.log(node);\r\n      //     return (node.label == object);\r\n      //   }\r\n      // });\r\n      // this.network.body.data.edges.add({\r\n      //   label: predicate,\r\n      //   from : sujetNode[0].id,\r\n      //   to : objetNode[0].id,\r\n      //   color: {inherit:'both'}\r\n      //\r\n      // });\r\n      // //on récupère ce edge pour l'envoyer au serveur\r\n      // var edge = this.network.body.data.edges.get({\r\n      //   filter: function(edge) {\r\n      //     return (edge.from == sujetNode[0].id && edge.to == objetNode[0].id && edge.label == predicate);\r\n      //   }\r\n      // });\r\n      // console.log(\"EDGE\",edge)\r\n      //  console.log(\"OK\",autofit,autofocus)\r\n      //this.network.fit();\r\n      //  fitAndFocus(sujetNode[0].id);\r\n\r\n    },\r\n    // catchCommande(commande){\r\n    //   console.log(commande)\r\n    //\r\n    // },\r\n    updateInput(inputNew){\r\n      document.getElementById('input').value = inputNew || \"\";\r\n    },\r\n    isFile(pathname) {\r\n      return pathname.split('/').pop().indexOf('.') > -1;\r\n    },\r\n    isValidUrl(string){\r\n      try {\r\n        new URL(string);\r\n        return true;\r\n      } catch (_) {\r\n        return false;\r\n      }\r\n    }\r\n  },\r\n  watch:{\r\n    commandInput(){\r\n      console.log(this.commandInput)\r\n      this.main_input = this.commandInput\r\n    }\r\n  },\r\n  // computed: mapState({\r\n  //   main_input: s => s.ipgs.main_input\r\n  // }),\r\n  computed: {\r\n    commandInput: {\r\n      get () { return this.$store.state.ipgs.commandInput},\r\n      set (/*value*/) { /*this.updateTodo(value)*/ }\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CommandInput.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CommandInput.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CommandInput.vue?vue&type=template&id=4fda2b32&\"\nimport script from \"./CommandInput.vue?vue&type=script&lang=js&\"\nexport * from \"./CommandInput.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}