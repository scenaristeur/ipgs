{"version":3,"sources":["webpack:///./src/views/Ipfs.vue?b476","webpack:///./node_modules/core-js/modules/es.regexp.to-string.js","webpack:///./node_modules/core-js/internals/regexp-flags.js","webpack:///./src/assets/ipfs-logo.svg","webpack:///./src/views/Ipfs.vue?5da5","webpack:///src/views/Ipfs.vue","webpack:///./src/views/Ipfs.vue?fac5","webpack:///./src/views/Ipfs.vue"],"names":["redefine","anObject","fails","flags","TO_STRING","RegExpPrototype","RegExp","prototype","nativeToString","NOT_GENERIC","call","source","INCORRECT_NAME","name","R","this","p","String","rf","f","undefined","unsafe","module","exports","that","result","global","ignoreCase","multiline","dotAll","unicode","sticky","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","_v","_s","status","id","agentVersion","model","value","callback","$$v","text","expression","on","sendToIpfs","cid","readFromIpfs","restit","addToFile","staticRenderFns","data","mounted","getIpfsNodeInfo","methods","console","component"],"mappings":"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","file":"js/ipfs.e9ae15e0.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Ipfs.vue?vue&type=style&index=0&id=d88fb224&scoped=true&lang=css&\"","'use strict';\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar fails = require('../internals/fails');\nvar flags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = String(R.source);\n    var rf = R.flags;\n    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","module.exports = __webpack_public_path__ + \"img/ipfs-logo.cd09fd99.svg\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',[_c('div',{staticClass:\"ipfs-info\"},[_c('img',{staticClass:\"ipfs-logo\",attrs:{\"alt\":\"IPFS logo\",\"src\":require(\"../assets/ipfs-logo.svg\")}}),_c('h5',[_vm._v(_vm._s(_vm.status))]),_c('h6',[_vm._v(\"ID: \"+_vm._s(_vm.id))]),_c('h6',[_vm._v(\"Agent version: \"+_vm._s(_vm.agentVersion))]),_c('b-input',{attrs:{\"placeholder\":\"text\"},model:{value:(_vm.text),callback:function ($$v) {_vm.text=$$v},expression:\"text\"}}),_c('b-button',{on:{\"click\":_vm.sendToIpfs}},[_vm._v(\"Send\")]),_vm._v(\" Cid : \"+_vm._s(_vm.cid)+\" \"),_c('b-button',{on:{\"click\":_vm.readFromIpfs}},[_vm._v(\"Read\")]),_c('b-textarea',{attrs:{\"cols\":\"10\",\"rows\":\"10\"},model:{value:(_vm.restit),callback:function ($$v) {_vm.restit=$$v},expression:\"restit\"}}),_c('hr'),_vm._v(\" example of cid json.string : QmZPhUqJQJ1UbnyPqXTENxMjPWjfgJ5ULyfKSgFS5AzuQ3 \"),_c('hr'),_vm._v(\" new vis js graph : QmVCeXk6HKeSzvbyYTYARWqVm4x1DYHUDgLdSKTd4ajEA4 \"),_c('hr'),_vm._v(\" basic vis graph : Qmb69aSsNwiboGpoY2gbndaSGd64UGwUvsEkz5MbfKyoEv \"),_c('hr'),_vm._v(\" see it on https://ipfs.io/ipfs/QmZPhUqJQJ1UbnyPqXTENxMjPWjfgJ5ULyfKSgFS5AzuQ3 \")],1),_c('hr'),_vm._v(\" File \"),_c('b-button',{on:{\"click\":_vm.addToFile}},[_vm._v(\"Add to file\")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <b-container>\r\n    <div class=\"ipfs-info\">\r\n      <img class=\"ipfs-logo\" alt=\"IPFS logo\" src=\"../assets/ipfs-logo.svg\" />\r\n      <h5>{{ status }}</h5>\r\n      <h6>ID: {{ id }}</h6>\r\n      <h6>Agent version: {{ agentVersion }}</h6>\r\n\r\n      <b-input v-model=\"text\" placeholder=\"text\"/>\r\n      <b-button @click=\"sendToIpfs\">Send</b-button>\r\n\r\n      Cid : {{ cid }}\r\n\r\n\r\n      <b-button @click=\"readFromIpfs\">Read</b-button>\r\n\r\n      <b-textarea v-model=\"restit\" cols=\"10\" rows=\"10\" />\r\n      <hr>\r\n      example of cid json.string : QmZPhUqJQJ1UbnyPqXTENxMjPWjfgJ5ULyfKSgFS5AzuQ3\r\n      <hr>\r\n      new vis js graph : QmVCeXk6HKeSzvbyYTYARWqVm4x1DYHUDgLdSKTd4ajEA4\r\n      <hr>\r\n      basic vis graph : Qmb69aSsNwiboGpoY2gbndaSGd64UGwUvsEkz5MbfKyoEv\r\n      <hr>\r\n      see it on https://ipfs.io/ipfs/QmZPhUqJQJ1UbnyPqXTENxMjPWjfgJ5ULyfKSgFS5AzuQ3\r\n    </div>\r\n\r\n    <hr>\r\n    File\r\n    <b-button @click=\"addToFile\">Add to file</b-button>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\n\r\n// https://js.ipfs.io/\r\n// duplex stream to add files https://github.com/ipfs/js-ipfs/tree/c47a6335b77d5284711f13a83349000820f85775/examples/browser-add-readable-stream\r\n// put https://github.com/ipfs/js-ipfs/blob/c47a6335b77d5284711f13a83349000820f85775/examples/traverse-ipld-graphs/put.js\r\n// IPLD graph  https://github.com/ipfs/js-ipfs/tree/c47a6335b77d5284711f13a83349000820f85775/examples/traverse-ipld-graphs\r\n// git object https://github.com/ipld/js-ipld-git\r\n// service worker https://github.com/ipfs/js-ipfs/tree/c47a6335b77d5284711f13a83349000820f85775/examples/browser-service-worker\r\n\r\n// files add https://github.com/ipfs/js-ipfs/blob/master/examples/ipfs-client-add-files/index.js\r\n// video stream https://github.com/ipfs/js-ipfs/blob/c47a6335b77d5284711f13a83349000820f85775/examples/browser-readablestream/index.js\r\n\r\n//     https://discuss.ipfs.io/t/storing-data-through-ipfs-forever/3456\r\n\r\n// https://gist.github.com/MaiaVictor/b8a4a44005c7a5243ce0150585a4d48b\r\n// https://www.npmjs.com/package/nano-ipfs-store\r\n// https://github.com/SilentCicero/ipfs-mini\r\n//\r\n//\r\n// const ipfs = require(\"nano-ipfs-store\").at(\"https://ipfs.infura.io:5001\");\r\n//\r\n// (async () => {\r\n//\r\n//   const doc = JSON.stringify({\r\n//     foo: \"bar\",\r\n//     tic: \"tac\"\r\n//   });\r\n//\r\n//   const cid = await ipfs.add(doc);\r\n//\r\n//   console.log(\"IPFS cid:\", cid);\r\n//\r\n//   console.log(await ipfs.cat(cid));\r\n//\r\n// })();\r\n\r\n\r\nconst uint8ArrayConcat = require('uint8arrays/concat')\r\n\r\nexport default {\r\n  name: \"Ipfs\",\r\n  data: function() {\r\n    return {\r\n      status: \"Connecting to IPFS...\",\r\n      id: \"\",\r\n      agentVersion: \"\",\r\n      text: \"\",\r\n      cid: \"QmZPhUqJQJ1UbnyPqXTENxMjPWjfgJ5ULyfKSgFS5AzuQ3\",\r\n      restit: \"\"\r\n    };\r\n  },\r\n  mounted: function() {\r\n    this.getIpfsNodeInfo();\r\n  },\r\n  methods: {\r\n    async getIpfsNodeInfo() {\r\n      try {\r\n        // Await for ipfs node instance.\r\n        this.ipfs = await this.$ipfs;\r\n        // Call ipfs `id` method.\r\n        // Returns the identity of the Peer.\r\n        const { agentVersion, id } = await this.ipfs.id();\r\n        this.agentVersion = agentVersion;\r\n        this.id = id;\r\n        // Set successful status text.\r\n        this.status = \"Connected to IPFS =)\";\r\n      } catch (err) {\r\n        // Set error status text.\r\n        this.status = `Error: ${err}`;\r\n      }\r\n    },\r\n\r\n    async sendToIpfs(){\r\n      //  let app = this\r\n      // add your data to to IPFS - this can be a string, a Buffer,\r\n      // a stream of Buffers, etc\r\n      console.log(this.ipfs)\r\n      const data = this.text\r\n      const results = await this.ipfs.add(data)\r\n      console.log(\"res\", results)\r\n      console.log(await results.cid)\r\n      this.cid = results.cid\r\n      // we loop over the results because 'add' supports multiple\r\n      // additions, but we only added one entry here so we only see\r\n      // one log line in the output\r\n      // for await (const { cid } of results) {\r\n      //   // CID (Content IDentifier) uniquely addresses the data\r\n      //   // and can be used to get it again.\r\n      //   console.log(cid.toString())\r\n      //   //  app.cids.push(cid.toString())\r\n      // }\r\n    },\r\n\r\n    async readFromIpfs(){\r\n      const stream =  await this.ipfs.cat(this.cid)\r\n      let data = ''\r\n      for await (const chunk of stream) {\r\n        // chunks of data are returned as a Buffer, convert it back to a string\r\n        data += chunk.toString()\r\n      }\r\n      this.restit = data\r\n      console.log(data)\r\n    },\r\n    async addToFile(){\r\n      // https://github.com/ipfs/js-ipfs/tree/master/examples/ipfs-101\r\n      // npm i uint8arrays\r\n\r\n\r\n\r\n      const doc = JSON.stringify({\r\n          foo: \"bar\",\r\n          tic: \"tac\"\r\n        });\r\n\r\n        const cid = await this.ipfs.add(doc);\r\n\r\n        console.log(\"IPFS cid:\", cid);\r\n\r\n        console.log(await this.ipfs.cat(cid));\r\n\r\n\r\n\r\n\r\n\r\n      const fileAdded = await this.ipfs.add({\r\n        path: 'vis_default.json',\r\n        content: JSON.stringify({nodes:[{id:\"1\",label:\"One\"},{id:\"2\",label:\"Two\"} ], edges: [{from:\"1\", to:\"2\", label: \"A link\"}]})\r\n        //  context: this.text\r\n      })\r\n      console.log(fileAdded)\r\n      console.log('Added file:', fileAdded.path, fileAdded.cid)\r\n\r\n      const chunks = []\r\n      for await (const chunk of this.ipfs.cat(fileAdded.cid)) {\r\n        chunks.push(chunk)\r\n      }\r\nconsole.log(chunks)\r\n      console.log('Added file contents:', uint8ArrayConcat(chunks).toString())\r\n\r\n      let read = await this.ipfs.cat(fileAdded.cid)\r\n      // let get = await this.ipfs.get(fileAdded.cid)\r\n      console.log(read)\r\n      // console.log(get)\r\n\r\n      // ou https://discuss.ipfs.io/t/how-to-fetch-content-from-ipfs-with-jsipfs/9912\r\n      //     const validCID = '<CID>'\r\n      //\r\n      // this.ipfs.files.read(fileAdded.cid, function(err, files) {\r\n      //   console.log(files)\r\n      //     // files.forEach((file) => {\r\n      //     //     console.log(file.path)\r\n      //     //     console.log(\"File content >> \", file.content.toString('utf8'))\r\n      //     // })\r\n      // })\r\n      //\r\n      // this.ipfs.get(fileAdded.cid, function(err, files) {\r\n      //   console.log(files)\r\n      //     // files.forEach((file) => {\r\n      //     //     console.log(file.path)\r\n      //     //     console.log(\"File content >> \", file.content.toString('utf8'))\r\n      //     // })\r\n      // })\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  },\r\n};\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n.ipfs-logo {\r\n  height: 10rem;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Ipfs.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Ipfs.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Ipfs.vue?vue&type=template&id=d88fb224&scoped=true&\"\nimport script from \"./Ipfs.vue?vue&type=script&lang=js&\"\nexport * from \"./Ipfs.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Ipfs.vue?vue&type=style&index=0&id=d88fb224&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"d88fb224\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}