{"version":3,"sources":["webpack:///./src/components/storage/IpfsModal.vue?eb7a","webpack:///src/components/storage/IpfsModal.vue","webpack:///./src/components/storage/IpfsModal.vue?758b","webpack:///./src/components/storage/IpfsModal.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","_v","_s","cid","ipns","staticRenderFns","name","components","props","data","created","methods","watch","console","log","makeIpns","computed","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,UAAU,CAACE,MAAM,CAAC,GAAK,aAAa,MAAQ,OAAO,KAAO,OAAO,CAACN,EAAIO,GAAG,4CAA4CH,EAAG,MAAMA,EAAG,MAAMJ,EAAIO,GAAG,IAAIP,EAAIQ,GAAGR,EAAIS,KAAK,KAAKL,EAAG,MAAMJ,EAAIO,GAAG,uBAAuBH,EAAG,MAAMA,EAAG,IAAI,CAACE,MAAM,CAAC,KAAO,wBAAwBN,EAAIS,IAAI,OAAS,WAAW,CAACT,EAAIO,GAAG,wBAAwBP,EAAIQ,GAAGR,EAAIS,QAAQL,EAAG,MAAMJ,EAAIO,GAAG,kDAAkDH,EAAG,MAAMA,EAAG,IAAI,CAACE,MAAM,CAAC,KAAON,EAAIU,KAAK,OAAS,WAAW,CAACV,EAAIO,GAAGP,EAAIQ,GAAGR,EAAIU,YACpkBC,EAAkB,G,YCuBtB,G,oBAAA,CACEC,KAAM,eACNC,WAAY,GAGZC,MAAO,CAAC,MAAO,QACfC,KANF,WAOI,MAAO,CACLL,KAAM,KAOVM,QAfF,aA+BEC,QAAS,CACP,SADJ,WACA,uKACA,IAEA,iBAHA,SAKA,yCAIA,eACA,sDACA,uBAXA,+CAeEC,MAAF,CACIT,IADJ,WAEMU,QAAQC,IAAInB,KAAKQ,KACjBR,KAAKoB,aAGTC,SAAU,KC7EsV,I,YCO9VC,EAAY,eACd,EACAxB,EACAY,GACA,EACA,KACA,KACA,MAIa,aAAAY,E","file":"js/chunk-2d20f377.738e3315.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-modal',{attrs:{\"id\":\"ipfs-modal\",\"title\":\"IPFS\",\"size\":\"lg\"}},[_vm._v(\" A copy has been saved on IPFS with cid:\"),_c('br'),_c('br'),_vm._v(\" \"+_vm._s(_vm.cid)+\" \"),_c('br'),_vm._v(\" You can see it at \"),_c('br'),_c('a',{attrs:{\"href\":'https://ipfs.io/ipfs/'+_vm.cid,\"target\":\"_blank\"}},[_vm._v(\"https://ipfs.io/ipfs/\"+_vm._s(_vm.cid))]),_c('br'),_vm._v(\" and keep IPNS reference for future updates : \"),_c('br'),_c('a',{attrs:{\"href\":_vm.ipns,\"target\":\"_blank\"}},[_vm._v(_vm._s(_vm.ipns))])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <b-modal id=\"ipfs-modal\" title=\"IPFS\" size=\"lg\">\r\n    A copy has been saved on IPFS with cid:<br><br> {{ cid }}\r\n\r\n    <br>\r\n    You can see it at <br>\r\n    <a :href=\"'https://ipfs.io/ipfs/'+cid\" target=\"_blank\">https://ipfs.io/ipfs/{{cid}}</a>\r\n\r\n<br>\r\nand keep IPNS reference for future updates : <br>\r\n<a :href=\"ipns\" target=\"_blank\">{{ipns}}</a>\r\n\r\n  </b-modal>\r\n</template>\r\n\r\n<script>\r\n// import auth from 'solid-auth-client';\r\n// import FC from 'solid-file-client'\r\n// const fc = new FC( auth )\r\n// import Activity from '@/models/Activity.js'\r\n// import Network from '@/models/Network.js'\r\n//\r\n// let mimetypes = { json: 'application/json', jsonld: \"application/ld+json\", ttl: \"text/turtle\"}\r\n\r\nexport default {\r\n  name: \"StorageModal\",\r\n  components: {\r\n    //  'SolidLoginButton': () => import('@/components/solid/SolidLoginButton'),\r\n  },\r\n  props: ['cid', 'ipfs'],\r\n  data() {\r\n    return {\r\n      ipns: \"\"\r\n      // folder: {folders:[], files: []},\r\n      // url: \"\",\r\n      // new_graph_name : \"\",\r\n      // publish: true\r\n    }\r\n  },\r\n  created(){\r\n    //  alert (\"A copy has been saved on IPFS with cid '\"+results.cid+\"'. You can see it at https://ipfs.io/ipfs/\"+results.cid)\r\n    // this.dataToSave = this.$store.state.ipgs.dataToSave\r\n    // if (this.storage != null){\r\n    //   this.read({url: this.storage, name: this.storage, type: 'folder'})\r\n    // }\r\n    // if (this.$route.query.url != undefined ){\r\n    //   this.url = this.$route.query.url\r\n    //   console.log(this.url)\r\n    //   //  if(this.url != 'new'){\r\n    //   this.read(this.url)\r\n    //   // }else{\r\n    //   //   this.new_graph_name = \"new_graph_name\"\r\n    //   // }\r\n    // }\r\n  },\r\n  methods: {\r\n    async makeIpns(){\r\n      let app = this\r\n      // The address of your files.\r\n      const addr = '/ipfs/'+this.cid\r\n\r\n      await this.ipfs.name.publish(addr).then(function (res) {\r\n        // You now receive a res which contains two fields:\r\n        //   - name: the name under which the content was published.\r\n        //   - value: the \"real\" address to which Name points.\r\n        console.log(res)\r\n        app.ipns = `https://gateway.ipfs.io/ipns/${res.name}`\r\n        console.log(app.ipns)\r\n      })\r\n    }\r\n  },\r\n  watch:{\r\n    cid(){\r\n      console.log(this.cid)\r\n      this.makeIpns()\r\n    }\r\n  },\r\n  computed: {\r\n\r\n  },\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IpfsModal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IpfsModal.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./IpfsModal.vue?vue&type=template&id=66dfc6c4&\"\nimport script from \"./IpfsModal.vue?vue&type=script&lang=js&\"\nexport * from \"./IpfsModal.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}